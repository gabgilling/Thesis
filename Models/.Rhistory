temp <- temp %>% group_by(age_cat2, gender_male, ms, Constituency, isocntry, gdp_cap2,
higher_ed2,hhd_income2, unemp_pct2) %>%
summarise(pro = sum(envimportant2 == 1), against = n() - pro) %>%
na.omit()
View(temp)
fit_var_logit <- function(survey_df = c(), var_name, regional_predictors){
# print(length(survey_df))
if (length(survey_df) >= 2){
temp <- get(survey_df[1]) %>% select(var_name, age_cat2, gender_male, ms, NUTS_eb)
for (i in 2:length(survey_df)){
temp <- rbind(temp, get(survey_df[i]) %>% select(var_name, age_cat2, gender_male, ms, NUTS_eb))
}
} else {
temp = get(survey_df)
}
temp <- merge(temp, regional_predictors, by = "Constituency")
temp <- temp %>% group_by(age_cat2, gender_male, ms, Constituency, isocntry, gdp_cap2,
higher_ed2,hhd_income2, unemp_pct2) %>%
summarise(pro = sum(get(var_name) == 1), against = n() - pro) %>%
na.omit()
set.seed(1010)
return(stan_glmer(cbind(pro, against) ~ (1|isocntry) + (1|Constituency) + (1 | age_cat2)  + (1|ms) + gdp_cap2 + higher_ed2 + hhd_income2 + unemp_pct2 + gender_male, data = temp, family = binomial(link = "logit"), refresh= 0,
chains = 4, cores=  4, adapt_delta= 0.99))
}
generate_estimates <- function(survey_df){
excl <- c("gender_male", "age_cat2", "ms" ,"NUTS_eb", "year","parliament")
my_list <- list()
i <- 1
for (col in colnames(get(survey_df))[!colnames(get(survey_df)) %in% excl]){
print(col)
my_list[[i]] <- fit_var_logit(survey_df = survey_df, var_name = col)
i <- i + 1
}
return(my_list)
}
fit.692 <- generate_estimates("eb69.2")
generate_estimates <- function(survey_df){
excl <- c("gender_male", "age_cat2", "ms" ,"NUTS_eb", "year","parliament")
my_list <- list()
i <- 1
for (col in colnames(get(survey_df))[!colnames(get(survey_df)) %in% excl]){
print(col)
my_list[[i]] <- fit_var_logit(survey_df = survey_df, var_name = col, regional_predictors = reg_preds_constituencies)
i <- i + 1
}
return(my_list)
}
fit.692 <- generate_estimates("eb69.2")
generate_estimates <- function(survey_df){
excl <- c("gender_male", "age_cat2", "ms" , "year","parliament", "isocntry",
"Region.Name", "Constituency", "NUTS_eb_old")
my_list <- list()
i <- 1
for (col in colnames(get(survey_df))[!colnames(get(survey_df)) %in% excl]){
print(col)
my_list[[i]] <- fit_var_logit(survey_df = survey_df, var_name = col, regional_predictors = reg_preds_constituencies)
i <- i + 1
}
return(my_list)
}
fit.692 <- generate_estimates("eb69.2")
fit.813 <- generate_estimates("eb81.3")
fit.752 <- generate_estimates("eb75.2")
fit.621 <- generate_estimates("eb62.1")
fit.682 <- generate_estimates("eb68.2")
fit.711 <- generate_estimates("eb71.1")
fit.721 <- generate_estimates("eb72.1")
fit.752 <- generate_estimates("eb75.2")
fit.802 <- generate_estimates("eb80.2")
generate_estimates <- function(survey_df){
excl <- c("gender_male", "age_cat2", "ms" , "year","parliament", "isocntry",
"Region.Name", "Constituency", "NUTS_eb_old", "NUTS_eb_old")
my_list <- list()
i <- 1
for (col in colnames(get(survey_df))[!colnames(get(survey_df)) %in% excl]){
print(col)
my_list[[i]] <- fit_var_logit(survey_df = survey_df, var_name = col, regional_predictors = reg_preds_constituencies)
i <- i + 1
}
return(my_list)
}
fit.802 <- generate_estimates("eb80.2")
fit.834 <- generate_estimates("eb83.4")
fit.871 <- generate_estimates("eb87.1")
fit.881 <- generate_estimates("eb88.1")
fit.881[[1]]
fit.881[[1]] <- NULL
fit.871[[1]] <- NULL
fit.834[[1]] <- NULL
fit.802[[1]] <- NULL
fit.813[[1]] <- NULL
generate_region_estimates <- function(poststrat, fitted_model){
## generate state_df
N <- length(unique(poststrat$Region.Name))
region_preferences <- data.frame(
Region.Name = unique(poststrat$Region.Name),
constituency = rep("", N),
country = rep("", N),
pref = rep(-1, N),
se = rep(-1, N)
)
for (i in unique(poststrat$Constituency)) {
# print(i)
poststrat_region <- poststrat[poststrat$Constituency == i, ]
posterior_prob_region <- posterior_epred(
fitted_model,
# transform = TRUE,
draws = 1000,
newdata = as.data.frame(poststrat_region)
)
poststrat_prob_region <- posterior_prob_region %*% poststrat_region$freq / sum(poststrat_region$freq)
#This is the estimate for popn in state:
region_preferences[region_preferences$Constituency == i,]$pref <- round(mean(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$se <- round(sd(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$country <- unique(poststrat_region$country)
region_preferences[region_preferences$Constituency == i,]$region <- unique(poststrat_region$Region.Name)
}
return(region_preferences %>% group_by(Constituency, country) %>% summarise(pref = mean(pref), se = mean(se)))
}
generate_region_estimates <- function(poststrat, fitted_model){
## generate state_df
N <- length(unique(poststrat$Region.Name))
region_preferences <- data.frame(
Region.Name = unique(poststrat$Region.Name),
Constituency = rep("", N),
country = rep("", N),
pref = rep(-1, N),
se = rep(-1, N)
)
for (i in unique(poststrat$Constituency)) {
# print(i)
poststrat_region <- poststrat[poststrat$Constituency == i, ]
posterior_prob_region <- posterior_epred(
fitted_model,
# transform = TRUE,
draws = 1000,
newdata = as.data.frame(poststrat_region)
)
poststrat_prob_region <- posterior_prob_region %*% poststrat_region$freq / sum(poststrat_region$freq)
#This is the estimate for popn in state:
region_preferences[region_preferences$Constituency == i,]$pref <- round(mean(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$se <- round(sd(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$country <- unique(poststrat_region$country)
region_preferences[region_preferences$Constituency == i,]$region <- unique(poststrat_region$Region.Name)
}
return(region_preferences %>% group_by(Constituency, country) %>% summarise(pref = mean(pref), se = mean(se)))
}
poststrat_survey <- function(model_list){
agg_results <- generate_region_estimates(poststrat = census2011_ms %>%  na.omit(), model_list[[1]])
for (i in 2:length(model_list)){
agg_results <- rbind(agg_results, generate_region_estimates(poststrat = census2011_ms %>%  na.omit(), model_list[[i]]))
}
agg_prefs <- agg_results %>% group_by(Constituency, country) %>%summarise(mean_pref = mean(pref), mean_se = mean(se))
return(agg_prefs)
}
prefs.621 <- poststrat_survey(fit.621)
poststrat_survey <- function(model_list){
agg_results <- generate_region_estimates(poststrat = census2011_ms %>%  na.omit(), model_list[[1]])
for (i in 2:length(model_list)){
print(i)
agg_results <- rbind(agg_results, generate_region_estimates(poststrat = census2011_ms %>%  na.omit(), model_list[[i]]))
}
agg_prefs <- agg_results %>% group_by(Constituency, country) %>%summarise(mean_pref = mean(pref), mean_se = mean(se))
return(agg_prefs)
}
prefs.621 <- poststrat_survey(fit.621)
generate_region_estimates <- function(poststrat, fitted_model){
## generate state_df
N <- length(unique(poststrat$Region.Name))
region_preferences <- data.frame(
Region.Name = unique(poststrat$Region.Name),
Constituency = rep("", N),
country = rep("", N),
pref = rep(-1, N),
se = rep(-1, N)
)
for (i in unique(poststrat$Constituency)) {
print(i)
poststrat_region <- poststrat[poststrat$Constituency == i, ]
posterior_prob_region <- posterior_epred(
fitted_model,
# transform = TRUE,
draws = 1000,
newdata = as.data.frame(poststrat_region)
)
poststrat_prob_region <- posterior_prob_region %*% poststrat_region$freq / sum(poststrat_region$freq)
#This is the estimate for popn in state:
region_preferences[region_preferences$Constituency == i,]$pref <- round(mean(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$se <- round(sd(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$country <- unique(poststrat_region$country)
region_preferences[region_preferences$Constituency == i,]$region <- unique(poststrat_region$Region.Name)
}
return(region_preferences %>% group_by(Constituency, country) %>% summarise(pref = mean(pref), se = mean(se)))
}
prefs.621 <- poststrat_survey(fit.621)
View(census2011_ms)
census2011_ms$isocntry <- census2011_ms$country
prefs.621 <- poststrat_survey(fit.621)
View(census2011_ms)
generate_region_estimates <- function(poststrat, fitted_model){
## generate state_df
N <- length(unique(poststrat$Region.Name))
region_preferences <- data.frame(
Region.Name = unique(poststrat$Region.Name),
Constituency = rep("", N),
country = rep("", N),
pref = rep(-1, N),
se = rep(-1, N)
)
for (i in unique(poststrat$Constituency)) {
print(i)
poststrat_region <- poststrat[poststrat$Constituency == i, ]
posterior_prob_region <- posterior_epred(
fitted_model,
# transform = TRUE,
draws = 1000,
newdata = as.data.frame(poststrat_region)
)
poststrat_prob_region <- posterior_prob_region %*% poststrat_region$freq / sum(poststrat_region$freq)
#This is the estimate for popn in state:
region_preferences[region_preferences$Constituency == i,]$pref <- round(mean(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$se <- round(sd(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$country <- unique(poststrat_region$isocntry)
region_preferences[region_preferences$Constituency == i,]$region <- unique(poststrat_region$Region.Name)
}
return(region_preferences %>% group_by(Constituency, country) %>% summarise(pref = mean(pref), se = mean(se)))
}
prefs.621 <- poststrat_survey(fit.621)
generate_region_estimates <- function(poststrat, fitted_model){
## generate state_df
N <- length(unique(poststrat$Region.Name))
region_preferences <- data.frame(
Region.Name = unique(poststrat$Region.Name),
Constituency = rep("", N),
country = rep("", N),
pref = rep(-1, N),
se = rep(-1, N)
)
for (i in unique(poststrat$Constituency)) {
print(i)
poststrat_region <- poststrat[poststrat$Constituency == i, ]
print(head(poststrat_region))
posterior_prob_region <- posterior_epred(
fitted_model,
# transform = TRUE,
draws = 1000,
newdata = as.data.frame(poststrat_region)
)
poststrat_prob_region <- posterior_prob_region %*% poststrat_region$freq / sum(poststrat_region$freq)
#This is the estimate for popn in state:
region_preferences[region_preferences$Constituency == i,]$pref <- round(mean(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$se <- round(sd(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$country <- unique(poststrat_region$isocntry)
region_preferences[region_preferences$Constituency == i,]$region <- unique(poststrat_region$Region.Name)
}
return(region_preferences %>% group_by(Constituency, country) %>% summarise(pref = mean(pref), se = mean(se)))
}
prefs.621 <- poststrat_survey(fit.621)
generate_region_estimates <- function(poststrat, fitted_model){
## generate state_df
N <- length(unique(poststrat$Constituency))
region_preferences <- data.frame(
Constituency = unique(poststrat$Constituency),
Region.Name = rep("", N),
country = rep("", N),
pref = rep(-1, N),
se = rep(-1, N)
)
for (i in unique(poststrat$Constituency)) {
print(i)
poststrat_region <- poststrat[poststrat$Constituency == i, ]
print(head(poststrat_region))
posterior_prob_region <- posterior_epred(
fitted_model,
# transform = TRUE,
draws = 1000,
newdata = as.data.frame(poststrat_region)
)
poststrat_prob_region <- posterior_prob_region %*% poststrat_region$freq / sum(poststrat_region$freq)
#This is the estimate for popn in state:
region_preferences[region_preferences$Constituency == i,]$pref <- round(mean(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$se <- round(sd(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$country <- unique(poststrat_region$isocntry)
region_preferences[region_preferences$Constituency == i,]$region <- unique(poststrat_region$Region.Name)
}
return(region_preferences %>% group_by(Constituency, country) %>% summarise(pref = mean(pref), se = mean(se)))
}
prefs.621 <- poststrat_survey(fit.621)
i = "Central Italy"
poststrat = census2011_ms
poststrat_region <- poststrat[poststrat$Constituency == i, ]
View(poststrat_region)
print(head(poststrat_region))
posterior_prob_region <- posterior_epred(
fitted_model,
# transform = TRUE,
draws = 1000,
newdata = as.data.frame(poststrat_region)
)
fitted_model <- fit.621[[1]]
posterior_prob_region <- posterior_epred(
fitted_model,
# transform = TRUE,
draws = 1000,
newdata = as.data.frame(poststrat_region)
)
View(poststrat_region)
generate_region_estimates <- function(poststrat, fitted_model){
## generate state_df
N <- length(unique(poststrat$Constituency))
region_preferences <- data.frame(
Constituency = unique(poststrat$Constituency),
Region.Name = rep("", N),
country = rep("", N),
pref = rep(-1, N),
se = rep(-1, N)
)
for (i in unique(poststrat$Constituency)) {
print(i)
poststrat_region <- poststrat[poststrat$Constituency == i, ]
print(head(poststrat_region))
posterior_prob_region <- posterior_epred(
fitted_model,
# transform = TRUE,
draws = 1000,
newdata = as.data.frame(poststrat_region) %>% na.omit()
)
poststrat_prob_region <- posterior_prob_region %*% poststrat_region$freq / sum(poststrat_region$freq)
#This is the estimate for popn in state:
region_preferences[region_preferences$Constituency == i,]$pref <- round(mean(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$se <- round(sd(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$country <- unique(poststrat_region$isocntry)
region_preferences[region_preferences$Constituency == i,]$region <- unique(poststrat_region$Region.Name)
}
return(region_preferences %>% group_by(Constituency, country) %>% summarise(pref = mean(pref), se = mean(se)))
}
prefs.621 <- poststrat_survey(fit.621)
posterior_prob_region <- posterior_epred(
fitted_model,
# transform = TRUE,
draws = 1000,
newdata = as.data.frame(poststrat_region) %>% na.omit()
)
poststrat_prob_region <- posterior_prob_region %*% poststrat_region$freq / sum(poststrat_region$freq)
posterior_prob_region
View(poststrat_region)
posterior_prob_region %*% poststrat_region$freq
posterior_prob_region <- posterior_epred(
fitted_model,
# transform = TRUE,
draws = 1000,
newdata = as.data.frame(poststrat_region %>% na.omit())
)
poststrat_prob_region <- posterior_prob_region %*% poststrat_region$freq / sum(poststrat_region$freq)
generate_region_estimates <- function(poststrat, fitted_model){
## generate state_df
N <- length(unique(poststrat$Constituency))
region_preferences <- data.frame(
Constituency = unique(poststrat$Constituency),
Region.Name = rep("", N),
country = rep("", N),
pref = rep(-1, N),
se = rep(-1, N)
)
for (i in unique(poststrat$Constituency)) {
print(i)
poststrat_region <- poststrat[poststrat$Constituency == i, ] %>% na.omit()
print(head(poststrat_region))
posterior_prob_region <- posterior_epred(
fitted_model,
# transform = TRUE,
draws = 1000,
newdata = as.data.frame(poststrat_region)
)
poststrat_prob_region <- posterior_prob_region %*% poststrat_region$freq / sum(poststrat_region$freq)
#This is the estimate for popn in state:
region_preferences[region_preferences$Constituency == i,]$pref <- round(mean(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$se <- round(sd(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$country <- unique(poststrat_region$isocntry)
region_preferences[region_preferences$Constituency == i,]$region <- unique(poststrat_region$Region.Name)
}
return(region_preferences %>% group_by(Constituency, country) %>% summarise(pref = mean(pref), se = mean(se)))
}
prefs.621 <- poststrat_survey(fit.621)
poststrat_region <- poststrat[poststrat$Constituency == i, ] %>% na.omit()
print(head(poststrat_region))
posterior_prob_region <- posterior_epred(
fitted_model,
# transform = TRUE,
draws = 1000,
newdata = as.data.frame(poststrat_region)
)
poststrat_prob_region <- posterior_prob_region %*% poststrat_region$freq / sum(poststrat_region$freq)
#This is the estimate for popn in state:
region_preferences[region_preferences$Constituency == i,]$pref <- round(mean(poststrat_prob_region), 4)
region_preferences <- data.frame(
Constituency = unique(poststrat$Constituency),
Region.Name = rep("", N),
country = rep("", N),
pref = rep(-1, N),
se = rep(-1, N)
)
## generate state_df
N <- length(unique(poststrat$Constituency))
region_preferences <- data.frame(
Constituency = unique(poststrat$Constituency),
Region.Name = rep("", N),
country = rep("", N),
pref = rep(-1, N),
se = rep(-1, N)
)
#This is the estimate for popn in state:
region_preferences[region_preferences$Constituency == i,]$pref <- round(mean(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$se <- round(sd(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$country <- unique(poststrat_region$isocntry)
region_preferences[region_preferences$Constituency == i,]$region <- unique(poststrat_region$Region.Name)
View(region_preferences)
region_preferences[region_preferences$Constituency == i,]$region <- unique(poststrat_region$Region.Name)
View(region_preferences)
generate_region_estimates <- function(poststrat, fitted_model){
## generate state_df
N <- length(unique(poststrat$Constituency))
region_preferences <- data.frame(
Constituency = unique(poststrat$Constituency),
region = rep("", N),
country = rep("", N),
pref = rep(-1, N),
se = rep(-1, N)
)
for (i in unique(poststrat$Constituency)) {
print(i)
poststrat_region <- poststrat[poststrat$Constituency == i, ] %>% na.omit()
print(head(poststrat_region))
posterior_prob_region <- posterior_epred(
fitted_model,
# transform = TRUE,
draws = 1000,
newdata = as.data.frame(poststrat_region)
)
poststrat_prob_region <- posterior_prob_region %*% poststrat_region$freq / sum(poststrat_region$freq)
#This is the estimate for popn in state:
region_preferences[region_preferences$Constituency == i,]$pref <- round(mean(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$se <- round(sd(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$country <- unique(poststrat_region$isocntry)
region_preferences[region_preferences$Constituency == i,]$region <- unique(poststrat_region$Region.Name)
}
return(region_preferences %>% group_by(Constituency, country) %>% summarise(pref = mean(pref), se = mean(se)))
}
prefs.621 <- poststrat_survey(fit.621)
i <- "East France"
poststrat_region <- poststrat[poststrat$Constituency == i, ] %>% na.omit()
View(poststrat_region)
generate_region_estimates <- function(poststrat, fitted_model){
## generate state_df
N <- length(unique(poststrat$Constituency))
region_preferences <- data.frame(
Constituency = unique(poststrat$Constituency),
country = rep("", N),
pref = rep(-1, N),
se = rep(-1, N)
)
for (i in unique(poststrat$Constituency)) {
# print(i)
poststrat_region <- poststrat[poststrat$Constituency == i, ] %>% na.omit()
print(head(poststrat_region))
posterior_prob_region <- posterior_epred(
fitted_model,
# transform = TRUE,
draws = 1000,
newdata = as.data.frame(poststrat_region)
)
poststrat_prob_region <- posterior_prob_region %*% poststrat_region$freq / sum(poststrat_region$freq)
#This is the estimate for popn in state:
region_preferences[region_preferences$Constituency == i,]$pref <- round(mean(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$se <- round(sd(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$country <- unique(poststrat_region$isocntry)
}
return(region_preferences %>% group_by(Constituency, country) %>% summarise(pref = mean(pref), se = mean(se)))
}
prefs.621 <- poststrat_survey(fit.621)
poststrat_survey <- function(model_list){
agg_results <- generate_region_estimates(poststrat = census2011_ms %>%  na.omit(), model_list[[1]])
for (i in 2:length(model_list)){
print(i)
agg_results <- rbind(agg_results, generate_region_estimates(poststrat = census2011_ms %>%  na.omit(), model_list[[i]]))
}
agg_prefs <- agg_results %>% group_by(Constituency, country) %>%summarise(mean_pref = mean(pref), mean_se = mean(se))
return(agg_prefs)
}
prefs.621 <- poststrat_survey(fit.621)
prefs.692 <- poststrat_survey(fit.692)
posterior_prob_region <- posterior_epred(
fitted_model,
# transform = TRUE,
draws = 1000,
newdata = as.data.frame(poststrat_region)
)
poststrat_prob_region <- posterior_prob_region %*% poststrat_region$freq / sum(poststrat_region$freq)
#This is the estimate for popn in state:
region_preferences[region_preferences$Constituency == i,]$pref <- round(mean(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$se <- round(sd(poststrat_prob_region), 4)
region_preferences[region_preferences$Constituency == i,]$country <- unique(poststrat_region$isocntry)
region_preferences %>% group_by(Constituency, country) %>% summarise(pref = mean(pref), se = mean(se))
i
prefs.813 <- poststrat_survey(fit.813)
fitted_model = fit.621[[2]]
posterior_prob_region <- posterior_epred(
fitted_model,
# transform = TRUE,
draws = 1000,
newdata = as.data.frame(poststrat_region)
)
